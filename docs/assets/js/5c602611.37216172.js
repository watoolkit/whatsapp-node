"use strict";(self.webpackChunkwatsapp_node_sdk_docs=self.webpackChunkwatsapp_node_sdk_docs||[]).push([[343],{4871:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"api/webhook","title":"Webhook API Reference","description":"WebhookHandler","source":"@site/docs/api/webhook.md","sourceDirName":"api","slug":"/api/webhook","permalink":"/whatsapp-node/docs/api/webhook","draft":false,"unlisted":false,"editUrl":"https://github.com/watoolkit/whatsapp-node/tree/main/docs/docs/api/webhook.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Template Messages API","permalink":"/whatsapp-node/docs/api/templates"},"next":{"title":"Types Reference","permalink":"/whatsapp-node/docs/api/types"}}');var s=t(4848),a=t(8453);const r={sidebar_position:4},i="Webhook API Reference",d={},c=[{value:"WebhookHandler",id:"webhookhandler",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:3},{value:"Types",id:"types",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"webhook-api-reference",children:"Webhook API Reference"})}),"\n",(0,s.jsx)(n.h2,{id:"webhookhandler",children:"WebhookHandler"}),"\n",(0,s.jsx)(n.p,{children:"Main class for handling incoming webhooks."}),"\n",(0,s.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const handler = new WebhookHandler();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Handle incoming webhook data\nhandleWebhook(data: WebhookMessage): void\n\n// Register message type handler\nonMessageType(\n  type: WebhookMessageType,\n  handler: (message: WebhookMessageData) => void | Promise<void>\n): void\n\n// Register status update handler\nonStatus(\n  handler: (status: MessageStatus) => void | Promise<void>\n): void\n"})}),"\n",(0,s.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type WebhookMessageType = \n  | 'text'\n  | 'image'\n  | 'video'\n  | 'audio'\n  | 'document'\n  | 'location'\n  | 'contacts'\n  | 'interactive'\n  | 'button'\n  | 'reaction';\n\ninterface MessageStatus {\n  id: string;\n  status: 'sent' | 'delivered' | 'read' | 'failed';\n  timestamp: string;\n  recipient_id: string;\n  errors?: Array<{\n    code: number;\n    title: string;\n    message: string;\n    error_data: {\n      details: string;\n    };\n  }>;\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);