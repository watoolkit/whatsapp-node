"use strict";(self.webpackChunkwatsapp_node_sdk_docs=self.webpackChunkwatsapp_node_sdk_docs||[]).push([[932],{1727:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"guides/webhook-handling","title":"Webhook Handling","description":"Learn how to handle incoming webhooks from WhatsApp.","source":"@site/docs/guides/webhook-handling.md","sourceDirName":"guides","slug":"/guides/webhook-handling","permalink":"/whatsapp-node/docs/guides/webhook-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/watoolkit/whatsapp-node/tree/main/docs/docs/guides/webhook-handling.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Template Messages","permalink":"/whatsapp-node/docs/guides/template-messages"},"next":{"title":"Error Handling","permalink":"/whatsapp-node/docs/guides/error-handling"}}');var t=n(4848),o=n(8453);const r={sidebar_position:4},d="Webhook Handling",i={},l=[{value:"Basic Setup",id:"basic-setup",level:2},{value:"Message Types",id:"message-types",level:2},{value:"Status Updates",id:"status-updates",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"webhook-handling",children:"Webhook Handling"})}),"\n",(0,t.jsx)(s.p,{children:"Learn how to handle incoming webhooks from WhatsApp."}),"\n",(0,t.jsx)(s.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,t.jsx)(s.p,{children:"Create a webhook handler and register event listeners:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import { WebhookHandler } from '@watoolkit/whatsapp-node';\n\nconst webhookHandler = new WebhookHandler();\n\n// Express.js example\napp.post('/webhook', express.json(), (req, res) => {\n  webhookHandler.handleWebhook(req.body);\n  res.sendStatus(200);\n});\n"})}),"\n",(0,t.jsx)(s.h2,{id:"message-types",children:"Message Types"}),"\n",(0,t.jsx)(s.p,{children:"Handle different types of incoming messages:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"// Text messages\nwebhookHandler.onMessageType('text', (message) => {\n  console.log(`Received text: ${message.text.body}`);\n});\n\n// Image messages\nwebhookHandler.onMessageType('image', (message) => {\n  console.log(`Received image: ${message.image.id}`);\n});\n\n// Interactive messages (buttons, lists)\nwebhookHandler.onMessageType('interactive', (message) => {\n  const { type, ...response } = message.interactive;\n  console.log(`Received ${type} response:`, response);\n});\n"})}),"\n",(0,t.jsx)(s.h2,{id:"status-updates",children:"Status Updates"}),"\n",(0,t.jsx)(s.p,{children:"Handle message status updates:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"webhookHandler.onStatus((status) => {\n  console.log(`Message ${status.id} status: ${status.status}`);\n  \n  switch (status.status) {\n    case 'sent':\n      console.log('Message was sent');\n      break;\n    case 'delivered':\n      console.log('Message was delivered');\n      break;\n    case 'read':\n      console.log('Message was read');\n      break;\n    case 'failed':\n      console.log(`Message failed: ${status.errors?.[0]?.message}`);\n      break;\n  }\n});\n"})})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>d});var a=n(6540);const t={},o=a.createContext(t);function r(e){const s=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(o.Provider,{value:s},e.children)}}}]);